"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sessionContexts = void 0;
exports.storeContext = storeContext;
exports.getContext = getContext;
exports.clearContext = clearContext;
// Store for session contexts
exports.sessionContexts = new Map();
// Helper function to store context
function storeContext(sessionId, context) {
    console.log('Storing context for session:', sessionId);
    console.log('Context details:', JSON.stringify(context, null, 2));
    console.log('Initial question being stored:', context.initialQuestion);
    exports.sessionContexts.set(sessionId, context);
}
// Helper function to get context
function getContext(sessionId) {
    const context = exports.sessionContexts.get(sessionId);
    console.log('Retrieved context for session:', sessionId);
    console.log('Context details:', JSON.stringify(context, null, 2));
    console.log('Initial question in retrieved context:', context === null || context === void 0 ? void 0 : context.initialQuestion);
    return context;
}
// Helper function to clear context
function clearContext(sessionId) {
    console.log('Clearing context for session:', sessionId);
    exports.sessionContexts.delete(sessionId);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vzc2lvbl9zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNlc3Npb25fc3RvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBZ0JBLG9DQUtDO0FBR0QsZ0NBTUM7QUFHRCxvQ0FHQztBQXhCRCw2QkFBNkI7QUFDaEIsUUFBQSxlQUFlLEdBQUcsSUFBSSxHQUFHLEVBQTRCLENBQUM7QUFFbkUsbUNBQW1DO0FBQ25DLFNBQWdCLFlBQVksQ0FBQyxTQUFpQixFQUFFLE9BQXlCO0lBQ3ZFLE9BQU8sQ0FBQyxHQUFHLENBQUMsOEJBQThCLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRSxPQUFPLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxFQUFFLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN2RSx1QkFBZSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUVELGlDQUFpQztBQUNqQyxTQUFnQixVQUFVLENBQUMsU0FBaUI7SUFDMUMsTUFBTSxPQUFPLEdBQUcsdUJBQWUsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDL0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQ0FBZ0MsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6RCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xFLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0NBQXdDLEVBQUUsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ2hGLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUM7QUFFRCxtQ0FBbUM7QUFDbkMsU0FBZ0IsWUFBWSxDQUFDLFNBQWlCO0lBQzVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDeEQsdUJBQWUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDcEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFR5cGVzIGZvciBzZXNzaW9uIGNvbnRleHRcbmV4cG9ydCBpbnRlcmZhY2UgSW50ZXJ2aWV3Q29udGV4dCB7XG4gIG5hbWU6IHN0cmluZztcbiAgam9iVGl0bGU6IHN0cmluZztcbiAgY29tcGFueTogc3RyaW5nO1xuICBsb2NhdGlvbj86IHN0cmluZztcbiAgc3RhZ2U6IHN0cmluZztcbiAgZGlmZmljdWx0eTogc3RyaW5nO1xuICBub3Rlcz86IHN0cmluZztcbiAgaW5pdGlhbFF1ZXN0aW9uPzogc3RyaW5nO1xufVxuXG4vLyBTdG9yZSBmb3Igc2Vzc2lvbiBjb250ZXh0c1xuZXhwb3J0IGNvbnN0IHNlc3Npb25Db250ZXh0cyA9IG5ldyBNYXA8c3RyaW5nLCBJbnRlcnZpZXdDb250ZXh0PigpO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gc3RvcmUgY29udGV4dFxuZXhwb3J0IGZ1bmN0aW9uIHN0b3JlQ29udGV4dChzZXNzaW9uSWQ6IHN0cmluZywgY29udGV4dDogSW50ZXJ2aWV3Q29udGV4dCk6IHZvaWQge1xuICBjb25zb2xlLmxvZygnU3RvcmluZyBjb250ZXh0IGZvciBzZXNzaW9uOicsIHNlc3Npb25JZCk7XG4gIGNvbnNvbGUubG9nKCdDb250ZXh0IGRldGFpbHM6JywgSlNPTi5zdHJpbmdpZnkoY29udGV4dCwgbnVsbCwgMikpO1xuICBjb25zb2xlLmxvZygnSW5pdGlhbCBxdWVzdGlvbiBiZWluZyBzdG9yZWQ6JywgY29udGV4dC5pbml0aWFsUXVlc3Rpb24pO1xuICBzZXNzaW9uQ29udGV4dHMuc2V0KHNlc3Npb25JZCwgY29udGV4dCk7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgY29udGV4dFxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHQoc2Vzc2lvbklkOiBzdHJpbmcpOiBJbnRlcnZpZXdDb250ZXh0IHwgdW5kZWZpbmVkIHtcbiAgY29uc3QgY29udGV4dCA9IHNlc3Npb25Db250ZXh0cy5nZXQoc2Vzc2lvbklkKTtcbiAgY29uc29sZS5sb2coJ1JldHJpZXZlZCBjb250ZXh0IGZvciBzZXNzaW9uOicsIHNlc3Npb25JZCk7XG4gIGNvbnNvbGUubG9nKCdDb250ZXh0IGRldGFpbHM6JywgSlNPTi5zdHJpbmdpZnkoY29udGV4dCwgbnVsbCwgMikpO1xuICBjb25zb2xlLmxvZygnSW5pdGlhbCBxdWVzdGlvbiBpbiByZXRyaWV2ZWQgY29udGV4dDonLCBjb250ZXh0Py5pbml0aWFsUXVlc3Rpb24pO1xuICByZXR1cm4gY29udGV4dDtcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGNsZWFyIGNvbnRleHRcbmV4cG9ydCBmdW5jdGlvbiBjbGVhckNvbnRleHQoc2Vzc2lvbklkOiBzdHJpbmcpOiB2b2lkIHtcbiAgY29uc29sZS5sb2coJ0NsZWFyaW5nIGNvbnRleHQgZm9yIHNlc3Npb246Jywgc2Vzc2lvbklkKTtcbiAgc2Vzc2lvbkNvbnRleHRzLmRlbGV0ZShzZXNzaW9uSWQpO1xufSAiXX0=